/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { createFileRoute } from '@tanstack/react-router'

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as IndexImport } from './routes/index'
import { Route as DashboardLayoutImport } from './routes/dashboard/_layout'
import { Route as DashboardLayoutIndexImport } from './routes/dashboard/_layout.index'
import { Route as AuthLoginIndexImport } from './routes/auth/login/index'
import { Route as DashboardLayoutUsersImport } from './routes/dashboard/_layout.users'
import { Route as DashboardLayoutUserUploadsImport } from './routes/dashboard/_layout.user-uploads'
import { Route as DashboardLayoutUploadPaperImport } from './routes/dashboard/_layout.upload-paper'
import { Route as DashboardLayoutSettingsImport } from './routes/dashboard/_layout.settings'
import { Route as DashboardLayoutProfileImport } from './routes/dashboard/_layout.profile'
import { Route as DashboardLayoutPreviousUploadsImport } from './routes/dashboard/_layout.previous-uploads'
import { Route as DashboardLayoutAcademicIdentityImport } from './routes/dashboard/_layout.academic-identity'

// Create Virtual Routes

const DashboardImport = createFileRoute('/dashboard')()

// Create/Update Routes

const DashboardRoute = DashboardImport.update({
  id: '/dashboard',
  path: '/dashboard',
  getParentRoute: () => rootRoute,
} as any)

const IndexRoute = IndexImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRoute,
} as any)

const DashboardLayoutRoute = DashboardLayoutImport.update({
  id: '/_layout',
  getParentRoute: () => DashboardRoute,
} as any)

const DashboardLayoutIndexRoute = DashboardLayoutIndexImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => DashboardLayoutRoute,
} as any)

const AuthLoginIndexRoute = AuthLoginIndexImport.update({
  id: '/auth/login/',
  path: '/auth/login/',
  getParentRoute: () => rootRoute,
} as any)

const DashboardLayoutUsersRoute = DashboardLayoutUsersImport.update({
  id: '/users',
  path: '/users',
  getParentRoute: () => DashboardLayoutRoute,
} as any)

const DashboardLayoutUserUploadsRoute = DashboardLayoutUserUploadsImport.update(
  {
    id: '/user-uploads',
    path: '/user-uploads',
    getParentRoute: () => DashboardLayoutRoute,
  } as any,
)

const DashboardLayoutUploadPaperRoute = DashboardLayoutUploadPaperImport.update(
  {
    id: '/upload-paper',
    path: '/upload-paper',
    getParentRoute: () => DashboardLayoutRoute,
  } as any,
)

const DashboardLayoutSettingsRoute = DashboardLayoutSettingsImport.update({
  id: '/settings',
  path: '/settings',
  getParentRoute: () => DashboardLayoutRoute,
} as any)

const DashboardLayoutProfileRoute = DashboardLayoutProfileImport.update({
  id: '/profile',
  path: '/profile',
  getParentRoute: () => DashboardLayoutRoute,
} as any)

const DashboardLayoutPreviousUploadsRoute =
  DashboardLayoutPreviousUploadsImport.update({
    id: '/previous-uploads',
    path: '/previous-uploads',
    getParentRoute: () => DashboardLayoutRoute,
  } as any)

const DashboardLayoutAcademicIdentityRoute =
  DashboardLayoutAcademicIdentityImport.update({
    id: '/academic-identity',
    path: '/academic-identity',
    getParentRoute: () => DashboardLayoutRoute,
  } as any)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexImport
      parentRoute: typeof rootRoute
    }
    '/dashboard': {
      id: '/dashboard'
      path: '/dashboard'
      fullPath: '/dashboard'
      preLoaderRoute: typeof DashboardImport
      parentRoute: typeof rootRoute
    }
    '/dashboard/_layout': {
      id: '/dashboard/_layout'
      path: '/dashboard'
      fullPath: '/dashboard'
      preLoaderRoute: typeof DashboardLayoutImport
      parentRoute: typeof DashboardRoute
    }
    '/dashboard/_layout/academic-identity': {
      id: '/dashboard/_layout/academic-identity'
      path: '/academic-identity'
      fullPath: '/dashboard/academic-identity'
      preLoaderRoute: typeof DashboardLayoutAcademicIdentityImport
      parentRoute: typeof DashboardLayoutImport
    }
    '/dashboard/_layout/previous-uploads': {
      id: '/dashboard/_layout/previous-uploads'
      path: '/previous-uploads'
      fullPath: '/dashboard/previous-uploads'
      preLoaderRoute: typeof DashboardLayoutPreviousUploadsImport
      parentRoute: typeof DashboardLayoutImport
    }
    '/dashboard/_layout/profile': {
      id: '/dashboard/_layout/profile'
      path: '/profile'
      fullPath: '/dashboard/profile'
      preLoaderRoute: typeof DashboardLayoutProfileImport
      parentRoute: typeof DashboardLayoutImport
    }
    '/dashboard/_layout/settings': {
      id: '/dashboard/_layout/settings'
      path: '/settings'
      fullPath: '/dashboard/settings'
      preLoaderRoute: typeof DashboardLayoutSettingsImport
      parentRoute: typeof DashboardLayoutImport
    }
    '/dashboard/_layout/upload-paper': {
      id: '/dashboard/_layout/upload-paper'
      path: '/upload-paper'
      fullPath: '/dashboard/upload-paper'
      preLoaderRoute: typeof DashboardLayoutUploadPaperImport
      parentRoute: typeof DashboardLayoutImport
    }
    '/dashboard/_layout/user-uploads': {
      id: '/dashboard/_layout/user-uploads'
      path: '/user-uploads'
      fullPath: '/dashboard/user-uploads'
      preLoaderRoute: typeof DashboardLayoutUserUploadsImport
      parentRoute: typeof DashboardLayoutImport
    }
    '/dashboard/_layout/users': {
      id: '/dashboard/_layout/users'
      path: '/users'
      fullPath: '/dashboard/users'
      preLoaderRoute: typeof DashboardLayoutUsersImport
      parentRoute: typeof DashboardLayoutImport
    }
    '/auth/login/': {
      id: '/auth/login/'
      path: '/auth/login'
      fullPath: '/auth/login'
      preLoaderRoute: typeof AuthLoginIndexImport
      parentRoute: typeof rootRoute
    }
    '/dashboard/_layout/': {
      id: '/dashboard/_layout/'
      path: '/'
      fullPath: '/dashboard/'
      preLoaderRoute: typeof DashboardLayoutIndexImport
      parentRoute: typeof DashboardLayoutImport
    }
  }
}

// Create and export the route tree

interface DashboardLayoutRouteChildren {
  DashboardLayoutAcademicIdentityRoute: typeof DashboardLayoutAcademicIdentityRoute
  DashboardLayoutPreviousUploadsRoute: typeof DashboardLayoutPreviousUploadsRoute
  DashboardLayoutProfileRoute: typeof DashboardLayoutProfileRoute
  DashboardLayoutSettingsRoute: typeof DashboardLayoutSettingsRoute
  DashboardLayoutUploadPaperRoute: typeof DashboardLayoutUploadPaperRoute
  DashboardLayoutUserUploadsRoute: typeof DashboardLayoutUserUploadsRoute
  DashboardLayoutUsersRoute: typeof DashboardLayoutUsersRoute
  DashboardLayoutIndexRoute: typeof DashboardLayoutIndexRoute
}

const DashboardLayoutRouteChildren: DashboardLayoutRouteChildren = {
  DashboardLayoutAcademicIdentityRoute: DashboardLayoutAcademicIdentityRoute,
  DashboardLayoutPreviousUploadsRoute: DashboardLayoutPreviousUploadsRoute,
  DashboardLayoutProfileRoute: DashboardLayoutProfileRoute,
  DashboardLayoutSettingsRoute: DashboardLayoutSettingsRoute,
  DashboardLayoutUploadPaperRoute: DashboardLayoutUploadPaperRoute,
  DashboardLayoutUserUploadsRoute: DashboardLayoutUserUploadsRoute,
  DashboardLayoutUsersRoute: DashboardLayoutUsersRoute,
  DashboardLayoutIndexRoute: DashboardLayoutIndexRoute,
}

const DashboardLayoutRouteWithChildren = DashboardLayoutRoute._addFileChildren(
  DashboardLayoutRouteChildren,
)

interface DashboardRouteChildren {
  DashboardLayoutRoute: typeof DashboardLayoutRouteWithChildren
}

const DashboardRouteChildren: DashboardRouteChildren = {
  DashboardLayoutRoute: DashboardLayoutRouteWithChildren,
}

const DashboardRouteWithChildren = DashboardRoute._addFileChildren(
  DashboardRouteChildren,
)

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '/dashboard': typeof DashboardLayoutRouteWithChildren
  '/dashboard/academic-identity': typeof DashboardLayoutAcademicIdentityRoute
  '/dashboard/previous-uploads': typeof DashboardLayoutPreviousUploadsRoute
  '/dashboard/profile': typeof DashboardLayoutProfileRoute
  '/dashboard/settings': typeof DashboardLayoutSettingsRoute
  '/dashboard/upload-paper': typeof DashboardLayoutUploadPaperRoute
  '/dashboard/user-uploads': typeof DashboardLayoutUserUploadsRoute
  '/dashboard/users': typeof DashboardLayoutUsersRoute
  '/auth/login': typeof AuthLoginIndexRoute
  '/dashboard/': typeof DashboardLayoutIndexRoute
}

export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '/dashboard': typeof DashboardLayoutIndexRoute
  '/dashboard/academic-identity': typeof DashboardLayoutAcademicIdentityRoute
  '/dashboard/previous-uploads': typeof DashboardLayoutPreviousUploadsRoute
  '/dashboard/profile': typeof DashboardLayoutProfileRoute
  '/dashboard/settings': typeof DashboardLayoutSettingsRoute
  '/dashboard/upload-paper': typeof DashboardLayoutUploadPaperRoute
  '/dashboard/user-uploads': typeof DashboardLayoutUserUploadsRoute
  '/dashboard/users': typeof DashboardLayoutUsersRoute
  '/auth/login': typeof AuthLoginIndexRoute
}

export interface FileRoutesById {
  __root__: typeof rootRoute
  '/': typeof IndexRoute
  '/dashboard': typeof DashboardRouteWithChildren
  '/dashboard/_layout': typeof DashboardLayoutRouteWithChildren
  '/dashboard/_layout/academic-identity': typeof DashboardLayoutAcademicIdentityRoute
  '/dashboard/_layout/previous-uploads': typeof DashboardLayoutPreviousUploadsRoute
  '/dashboard/_layout/profile': typeof DashboardLayoutProfileRoute
  '/dashboard/_layout/settings': typeof DashboardLayoutSettingsRoute
  '/dashboard/_layout/upload-paper': typeof DashboardLayoutUploadPaperRoute
  '/dashboard/_layout/user-uploads': typeof DashboardLayoutUserUploadsRoute
  '/dashboard/_layout/users': typeof DashboardLayoutUsersRoute
  '/auth/login/': typeof AuthLoginIndexRoute
  '/dashboard/_layout/': typeof DashboardLayoutIndexRoute
}

export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/'
    | '/dashboard'
    | '/dashboard/academic-identity'
    | '/dashboard/previous-uploads'
    | '/dashboard/profile'
    | '/dashboard/settings'
    | '/dashboard/upload-paper'
    | '/dashboard/user-uploads'
    | '/dashboard/users'
    | '/auth/login'
    | '/dashboard/'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/'
    | '/dashboard'
    | '/dashboard/academic-identity'
    | '/dashboard/previous-uploads'
    | '/dashboard/profile'
    | '/dashboard/settings'
    | '/dashboard/upload-paper'
    | '/dashboard/user-uploads'
    | '/dashboard/users'
    | '/auth/login'
  id:
    | '__root__'
    | '/'
    | '/dashboard'
    | '/dashboard/_layout'
    | '/dashboard/_layout/academic-identity'
    | '/dashboard/_layout/previous-uploads'
    | '/dashboard/_layout/profile'
    | '/dashboard/_layout/settings'
    | '/dashboard/_layout/upload-paper'
    | '/dashboard/_layout/user-uploads'
    | '/dashboard/_layout/users'
    | '/auth/login/'
    | '/dashboard/_layout/'
  fileRoutesById: FileRoutesById
}

export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  DashboardRoute: typeof DashboardRouteWithChildren
  AuthLoginIndexRoute: typeof AuthLoginIndexRoute
}

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  DashboardRoute: DashboardRouteWithChildren,
  AuthLoginIndexRoute: AuthLoginIndexRoute,
}

export const routeTree = rootRoute
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/",
        "/dashboard",
        "/auth/login/"
      ]
    },
    "/": {
      "filePath": "index.tsx"
    },
    "/dashboard": {
      "filePath": "dashboard",
      "children": [
        "/dashboard/_layout"
      ]
    },
    "/dashboard/_layout": {
      "filePath": "dashboard/_layout.tsx",
      "parent": "/dashboard",
      "children": [
        "/dashboard/_layout/academic-identity",
        "/dashboard/_layout/previous-uploads",
        "/dashboard/_layout/profile",
        "/dashboard/_layout/settings",
        "/dashboard/_layout/upload-paper",
        "/dashboard/_layout/user-uploads",
        "/dashboard/_layout/users",
        "/dashboard/_layout/"
      ]
    },
    "/dashboard/_layout/academic-identity": {
      "filePath": "dashboard/_layout.academic-identity.tsx",
      "parent": "/dashboard/_layout"
    },
    "/dashboard/_layout/previous-uploads": {
      "filePath": "dashboard/_layout.previous-uploads.tsx",
      "parent": "/dashboard/_layout"
    },
    "/dashboard/_layout/profile": {
      "filePath": "dashboard/_layout.profile.tsx",
      "parent": "/dashboard/_layout"
    },
    "/dashboard/_layout/settings": {
      "filePath": "dashboard/_layout.settings.tsx",
      "parent": "/dashboard/_layout"
    },
    "/dashboard/_layout/upload-paper": {
      "filePath": "dashboard/_layout.upload-paper.tsx",
      "parent": "/dashboard/_layout"
    },
    "/dashboard/_layout/user-uploads": {
      "filePath": "dashboard/_layout.user-uploads.tsx",
      "parent": "/dashboard/_layout"
    },
    "/dashboard/_layout/users": {
      "filePath": "dashboard/_layout.users.tsx",
      "parent": "/dashboard/_layout"
    },
    "/auth/login/": {
      "filePath": "auth/login/index.tsx"
    },
    "/dashboard/_layout/": {
      "filePath": "dashboard/_layout.index.tsx",
      "parent": "/dashboard/_layout"
    }
  }
}
ROUTE_MANIFEST_END */
